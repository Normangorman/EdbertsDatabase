$("#query_builder").queryBuilder({
    filters: [
        {   id:     "group_name",
            field:  "name",
            label:  "Name",
            type:   "string",
        },
        
        {   id:     "group_project",
            field:  "project",
            label:  "Project",
            type:   "string",
            input:  "select",
            values: {
                "Beacon Lough" : "Beacon Lough",
                "High Lanes" : "High Lanes",
                "The Fold"   : "The Fold"
            }
        },

        {   id:     "group_meets_on_day",
            field:  "meets_on_day",
            label:  "Meets on day",
            type:   "string",
            input:  "select",
            values: {
                "Monday"    : "Monday",
                "Tuesday"   : "Tuesday",
                "Wednesday" : "Wednesday",
                "Thursday"  : "Thursday",
                "Friday"    : "Friday",
                "Saturday"  : "Saturday",
                "Sunday"    : "Sunday"
            }
        },

        {   id:     "group_meets_at_time",
            field:  "meets_at_time",
            label:  "Meets at time",
            type:   "time",
            plugin: "clockpicker", //use jquery clockpicker plugin
            plugin_config: { autoclose: true}
        }
    ]
});

$("#query_builder_submit").click(function() {
    // the two 'false' parameters mean: output plain SQL, don't use new lines in output
    var res = $('#query_builder').queryBuilder('getSQL', false, false);
    console.log("generated SQL:", res.sql);
    console.log("About to POST to server...");
    $.ajax({
        type: "POST",
        url: '@{GroupsR}',
        data: {
            "query": res.sql
        },
        success: handleQueryReturn,
        dataType: "html" //expect the server to return some html encoding the new rows to add 
    });
});

handleQueryReturn = function(data) {
    console.log("Data received from server after POST request.");
    console.log(data);
    $('#groups_table tbody').html(data);
};

//Table sorting
var time_from_string = function(str){
    console.log("parsing time from string:", str);

    if (str.length) {
        var pattern = "^(\\d{2}):(\\d{2}):(\\d{2})$";
        var regexp = new RegExp(pattern);
        var timeParts = regexp.exec(str).slice(1);

        var timeObject = {
            hour:   timeParts [0],
            minute: timeParts [1],
            second: timeParts [2],
            calcTimeValue: function() {
                return (this.hour * 3600 + this.minute * 60 + this.second);
            }
        };
        return timeObject;
    }
    //if the string is empty it can't be parsed.
    else {
        var failObject = {
            calcTimeValue: function() { return 0 }
        };
        return failObject;
    }
}

$("#groups_table").stupidtable({
    "custom-time": function(a,b) {
            var aTime = time_from_string(a).calcTimeValue();
            var bTime = time_from_string(b).calcTimeValue();
            return aTime - bTime;
        }
});
